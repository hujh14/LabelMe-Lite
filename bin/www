#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var fs = require('fs');
var path = require('path');

var debug = require('debug')('labelmelite:server');


/**
 * Create HTTP server.
 */
var http = require('http');
var httpServer = http.createServer(app);
httpServer.listen(3000);
httpServer.on('error', onError);
// httpServer.on('listening', onListening);


/**
 * Create HTTPS server.
 */
var https = require('https');
var httpsOptions = {
  cert: fs.readFileSync(path.join(__dirname, '../ssl', 'cert.pem')),
  key: fs.readFileSync(path.join(__dirname, '../ssl', 'key.pem')),
  passphrase: 'labelme'
}
var httpsServer = https.createServer(httpsOptions, app);
httpsServer.listen(3001);
httpsServer.on('error', onError);
// httpsServer.on('listening', onListening);


/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
